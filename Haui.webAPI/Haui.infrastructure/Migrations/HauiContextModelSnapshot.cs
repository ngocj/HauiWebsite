// <auto-generated />
using System;
using Haui.infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Haui.infrastructure.Migrations
{
    [DbContext(typeof(HauiContext))]
    partial class HauiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Haui.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateNy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("Haui.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateNy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5e36cff-9698-4a1c-a8ac-b3e8b0dc25f0"),
                            CreateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8184),
                            CreateNy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleName = "Admin",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8197)
                        },
                        new
                        {
                            Id = new Guid("64c68fc8-7974-4622-b042-e1c3b58ecb43"),
                            CreateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8199),
                            CreateNy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleName = "User",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8199)
                        });
                });

            modelBuilder.Entity("Haui.Domain.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateNy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("327afb34-6df6-4297-b00b-adb37832af14"),
                            CreateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8283),
                            CreateNy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "SQL",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8284)
                        },
                        new
                        {
                            Id = new Guid("88e2fb0f-d378-4fec-b84d-6bce7ecb8ef7"),
                            CreateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8285),
                            CreateNy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "C#",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8286)
                        });
                });

            modelBuilder.Entity("Haui.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateNy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("10ab4b78-bcc3-491a-97a9-5fa136a3f41b"),
                            CreateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8303),
                            CreateNy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateOfBirth = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8302),
                            Email = " ngoc@gmail.com",
                            FullName = "Nguyen Bao Ngoc",
                            RoleId = new Guid("a5e36cff-9698-4a1c-a8ac-b3e8b0dc25f0"),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateDate = new DateTime(2025, 9, 24, 10, 33, 36, 934, DateTimeKind.Local).AddTicks(8303)
                        });
                });

            modelBuilder.Entity("Haui.Domain.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkill", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("10ab4b78-bcc3-491a-97a9-5fa136a3f41b"),
                            SkillId = new Guid("327afb34-6df6-4297-b00b-adb37832af14")
                        },
                        new
                        {
                            UserId = new Guid("10ab4b78-bcc3-491a-97a9-5fa136a3f41b"),
                            SkillId = new Guid("88e2fb0f-d378-4fec-b84d-6bce7ecb8ef7")
                        });
                });

            modelBuilder.Entity("Haui.Domain.Entities.User", b =>
                {
                    b.HasOne("Haui.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Haui.Domain.Entities.UserSkill", b =>
                {
                    b.HasOne("Haui.Domain.Entities.Skill", "Skill")
                        .WithMany("userSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haui.Domain.Entities.User", "User")
                        .WithMany("userSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Haui.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Haui.Domain.Entities.Skill", b =>
                {
                    b.Navigation("userSkills");
                });

            modelBuilder.Entity("Haui.Domain.Entities.User", b =>
                {
                    b.Navigation("userSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
